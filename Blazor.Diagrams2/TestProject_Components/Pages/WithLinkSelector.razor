@page "/link_selector"
<SourceCodeLink Repository="Blazor.Diagrams" Page="@(nameof(WithLinkSelector))" />

<Diagram>
    <Nodes>

        <!-- Builtin node, node-type (i.e. shape) specified by Type property -->
        <FixedSizeNode Id="n1" @bind-X="n1p.X" @bind-Y="n1p.Y" Type="NodeType.Rectangle" Width="60" Height="40">
            <div style="width:4em; height:3em"></div>
        </FixedSizeNode>
        <FixedSizeNode Id="n2" @bind-X="n2p.X" @bind-Y="n2p.Y" Type="NodeType.Ellipse" Width="40" Height="24">
            <div style="width:4em; height:3em"></div>
        </FixedSizeNode>
        <FixedSizeNode Id="n3" @bind-X="n3p.X" @bind-Y="n3p.Y" Type="NodeType.Diamond" Width="40" Height="24">
            <div style="width:4em; height:3em"></div>
        </FixedSizeNode>
        <FixedSizeNode Id="n4" @bind-X="n4p.X" @bind-Y="n4p.Y" Type="NodeType.Rectangle" Width="60" Height="40">
            <div style="width:4em; height:3em"></div>
        </FixedSizeNode>
    </Nodes>
    <!-- side note: maybe rename link to connector, as link seems to be a special tag, so auto-correct corrects Link to link all the time. -->
    <Links OnRemove="LinkRemoved" OnAdd="LinkAdded" @bind-DefaultType="link_type" @bind-DefaultArrow="arrows">
        <AngledLink Source="l1s" Target="l1t" Arrow="Arrow.None" />
        <CurvedLink Source="l2s" Target="l2t" Arrow="Arrow.Target" />
        <StraightLink Source="l3s" Target="l3t" Arrow="Arrow.Both" />
    </Links>
    <LinkSelectorSettings Position="Position.TopRight" />
</Diagram>

@code {
    private Point n1p = new Point(100, 100);
    private Point n2p = new Point(100, 300);
    private Point n3p = new Point(300, 100);
    private Point n4p = new Point(300, 300);
    private NodeAnchor l1s = new NodeAnchor { NodeId = "n1", Port = Position.BottomRight };
    private NodeAnchor l1t = new NodeAnchor { NodeId = "n4", Port = Position.TopLeft };
    private NodeAnchor l2s = new NodeAnchor { NodeId = "n1", Port = Position.TopRight };
    private NodeAnchor l2t = new NodeAnchor { NodeId = "n3", Port = Position.BottomLeft };
    private NodeAnchor l3s = new NodeAnchor { NodeId = "n1", Port = Position.Bottom };
    private NodeAnchor l3t = new NodeAnchor { NodeId = "n2", Port = Position.Top };
    private LinkType link_type { get; set; } = LinkType.Curved;
    private Arrow arrows { get; set; } = Arrow.Both;
    private void LinkRemoved(LinkBase link)
    {
        Console.WriteLine($"A link was removed: {link.Source} -> {link.Target}");
    }
    private void LinkAdded(LinkBase link)
    {
        Console.WriteLine($"A link was added: {link.Source} -> {link.Target}");
    }
}